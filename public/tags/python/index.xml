<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Rebecca Skinner</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on Rebecca Skinner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Python Applications with Nix</title>
      <link>/blog/python_and_nix/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/python_and_nix/</guid>
      <description>Introduction Nix is a package general purpose package manager available for *nix systems, including Linux (including NixOS), *bsd, and MacOS. Nix provides several novel capabilities, specifically immutability and reproducability. A nix package defines exact versions of all of it&amp;rsquo;s dependencies, and a nix installation manages each individual application independently. In this post we&amp;rsquo;ll look at using Nix during the development process, comparing it to virtualenv and pip for developing a python application.</description>
    </item>
    
    <item>
      <title>Building A Todo List with Python and Flask</title>
      <link>/blog/python_todo_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/python_todo_list/</guid>
      <description>Introduction NB: The full source code to this application is available on github.
The TODO List is a perrenial favorite of developers looking to learn a new language, framework, or technique. I recently joined a team that uses Python as one of their languages, and decided to create my own implementation of a basic todo list using python3 and Flask in order to hone my very rusty skills with dynamically typed OO languages.</description>
    </item>
    
  </channel>
</rss>